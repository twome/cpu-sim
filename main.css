body {
	font-size: 16px;
	line-height: 1;
	font-family: sans-serif;
	background-color: white;
	color: #222;
}

h1 {
	font-size: 1.2em;
	font-family: sans-serif;
	position: absolute;
	right: 0.5em;
	top: 0.5em;
	margin: 0; // override default
}

h3 {
	font-size: 1em;
	margin: 0;
}

input[type="text"] {
	max-width: 4em;
}

label {
	font-size: 0.8em;
	color: hsla(0,0%,50%,1);
}

/* For multiline text only */
.multiline {
	line-height: 1.5; // Better for reading but makes balancing vertical margins harder for UI elements
}

.memory {
	max-height: 70vh;
	overflow-y: auto;
	background: hsla(240, 80%, 30%, 1);
	color: white;
}
.register {
	background: hsla(141, 61%, 30%, 1);
	color: white;
}
.binaryDisplays {
	display: flex;
	padding: 0.62em;

	flex-wrap: wrap;
	flexDirection: row;
	align-items: center;
	justify-content: space-evenly;
}
.Cell {
	flex-basis: calc(12.5% - 0.62em);
	flex-grow: 1;
	flex-shrink: 1;

	text-align: right;
	overflow: hidden;
	min-width: 2em;
	display: inline-block;
	padding-right: 1em;
	padding: 0;
	list-style: none;
	font-family: monospace;
}
.binaryDisplays .Cell:nth-child(4n){
	color: hsla(6, 100%, 79%, 1);
}
/* TODO make these elements of "cell" block */
@keyframes executionFade {
	from {
		background-color: hsla(240, 80%, 60%, 1);
	}

	to {
		background-color: hsla(240, 80%, 30%, 1);
	}
}
.Cell_executed {
	animation: executionFade 6s;
	animation-timing-function: ease-in;
}
.Cell_number {
	color: hsla(0,0%,100%,0.5);
}
.Cell_lastActive {
	background: black;
	color: white;
}


.programCounter {
	background: hsla(0,80%,30%, 1);
	color: white;
}

.instructionRegister {
	background: hsl(55, 100%, 53%);
	color: #3a3a3a;
}

.programCounter,
.instructionRegister {
	margin-right: 1em;
	padding: 0.62em;
	display: inline-block;
}

.spacer {
	display: inline-block;
	height: 1px;
	width: 2em;
}

.controls {
	margin-bottom: 1em;
}